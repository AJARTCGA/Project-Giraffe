#version 150
layout(points) in;
layout(line_strip,max_vertices=2) out;
in vec3 v_texcoord[];
in vec3 v_normal[];
out vec2 g_texcoord;
out vec3 g_normal;
out vec3 g_pw;
out float visibility;
uniform mat4 worldMatrix;
uniform mat4 viewMatrix;
uniform mat4 projMatrix;
uniform float furlength;
uniform vec4 furGravity;

const float density = 0.007;
const float gradient = 2;

void main()
{
    vec4 n = vec4(v_normal[0],0.0);
    vec3 nw = (n*worldMatrix).xyz;
    vec4 p = vec4(gl_in[0].gl_Position);
    vec4 p_;
    g_texcoord = v_texcoord[0].xy;
    g_normal = nw;
    p_ = (p*worldMatrix);
    g_pw = p_.xyz;
    gl_Position = p_ * viewMatrix * projMatrix;
	float distance = length(p_.xyz);
	visibility = exp(-pow((distance*density),gradient));
	visibility = clamp(visibility,0.0,1.0);
    EmitVertex();
	for(int i = 1; i <= 5; i++)
	{
		g_texcoord = v_texcoord[0].xy;
		g_normal = nw;
		float t = i / 5.0;
		p_ = (p+(furlength*t*n*v_texcoord[0][2]))*worldMatrix;
		p_ = p_ + t * t * t* furGravity;
		g_pw = p_.xyz;
		gl_Position = p_ * viewMatrix * projMatrix;
		float distance = length(p_.xyz);
		visibility = exp(-pow((distance*density),gradient));
		visibility = clamp(visibility,0.0,1.0);
		EmitVertex();
	}
}